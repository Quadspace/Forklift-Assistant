"use strict";(()=>{var e={};e.id=419,e.ids=[419],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9691:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>f,patchFetch:()=>E,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p});var r={};s.r(r),s.d(r,{GET:()=>h});var a=s(9303),i=s(8716),o=s(670),n=s(7070),l=s(1216),u=s(118),c=s(7407);async function h(){let e=u.k.time("assistants_api_duration"),{apiKey:t,assistantName:s}=await (0,l.C)();if(!t||!s)return u.k.error("Missing required environment variables for assistants API"),n.NextResponse.json({status:"error",message:"PINECONE_API_KEY and PINECONE_ASSISTANT_NAME are required.",exists:!1},{status:400});try{let r=await c.x.request("https://api.pinecone.io/assistant/assistants",{method:"GET",headers:{"Api-Key":t},timeout:8e3,retries:1,useCache:!0,cacheTTL:9e5}),a=r.data.assistants.some(e=>e.name===s);return u.k.info("Assistant check completed",{assistantName:s,exists:a,cached:r.cached}),e(),n.NextResponse.json({status:"success",message:`Assistant '${s}' check completed.`,exists:a,assistant_name:s},{status:200})}catch(t){return u.k.error("Error checking assistant",{error:t instanceof Error?t.message:String(t),assistantName:s}),e(),n.NextResponse.json({status:"error",message:`Failed to check assistant: ${t instanceof Error?t.message:String(t)}`,exists:!1},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/assistants/route",pathname:"/api/assistants",filename:"route",bundlePath:"app/api/assistants/route"},resolvedPagePath:"C:\\Users\\MichaelSanders\\Documents\\Forklift-Assistant\\sample-apps\\pinecone-assistant\\src\\app\\api\\assistants\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:p,serverHooks:g}=d,f="/api/assistants/route";function E(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},7407:(e,t,s)=>{s.d(t,{x:()=>n});var r=s(118);class a{set(e,t,s){let a={data:t,timestamp:Date.now(),ttl:s||this.defaultTTL};this.store.set(e,a),r.k.debug(`Cache SET: ${e}`,{ttl:a.ttl})}get(e){let t=this.store.get(e);return t?Date.now()-t.timestamp>t.ttl?(this.store.delete(e),r.k.debug(`Cache EXPIRED: ${e}`),null):(r.k.debug(`Cache HIT: ${e}`),t.data):(r.k.debug(`Cache MISS: ${e}`),null)}has(e){let t=this.store.get(e);return!!t&&(!(Date.now()-t.timestamp>t.ttl)||(this.store.delete(e),!1))}delete(e){let t=this.store.delete(e);return t&&r.k.debug(`Cache DELETE: ${e}`),t}clear(){let e=this.store.size;this.store.clear(),r.k.debug(`Cache CLEAR: ${e} entries removed`)}cleanup(){let e=Date.now(),t=0;for(let[s,r]of this.store.entries())e-r.timestamp>r.ttl&&(this.store.delete(s),t++);t>0&&r.k.debug(`Cache CLEANUP: ${t} expired entries removed`)}getStats(){return{size:this.store.size,hitRate:0}}static generateKey(e,t){let s=Object.keys(t).sort().map(e=>`${e}:${t[e]}`).join("|");return`${e}:${s}`}constructor(){this.store=new Map,this.defaultTTL=3e5}}let i=new a;setInterval(()=>{i.cleanup()},6e5);class o{async request(e,t={}){let{timeout:s=this.defaultTimeout,retries:o=this.defaultRetries,retryDelay:n=this.defaultRetryDelay,useCache:l=!1,cacheTTL:u,...c}=t,h=l?a.generateKey("api",{url:e,method:c.method||"GET",body:c.body}):null;if(l&&h){let e=i.get(h);if(e)return{data:e,status:200,cached:!0}}let d=new AbortController,m=setTimeout(()=>d.abort(),s),p=null;for(let t=0;t<=o;t++)try{let t=Date.now(),s=await fetch(e,{...c,signal:d.signal});clearTimeout(m);let a=Date.now()-t;if(r.k.metric(`api_request_${s.status}`,a),!s.ok)throw Error(`HTTP ${s.status}: ${s.statusText}`);let o=await s.json();return l&&h&&200===s.status&&i.set(h,o,u),r.k.debug("API request successful",{url:e,status:s.status,duration:a}),{data:o,status:s.status}}catch(a){if(p=a,a instanceof Error&&"AbortError"===a.name)throw r.k.error(`API request timeout after ${s}ms`,{url:e}),Error(`Request timeout after ${s}ms`);t<o&&(r.k.warn(`API request failed, retrying (${t+1}/${o})`,{url:e,error:a instanceof Error?a.message:String(a)}),await this.delay(n*Math.pow(2,t)))}throw clearTimeout(m),r.k.error(`API request failed after ${o+1} attempts`,{url:e,error:p?.message}),p||Error("Request failed")}delay(e){return new Promise(t=>setTimeout(t,e))}async batchRequests(e,t=3){let s=[],r=[];for(let a=0;a<e.length;a++){let i=e[a],o=this.request(i.url,i.options).then(e=>{s[a]=e}).catch(e=>{s[a]=e});r.push(o),r.length>=t&&(await Promise.race(r),r.splice(r.findIndex(e=>e===o),1))}return await Promise.all(r),s}constructor(){this.defaultTimeout=1e4,this.defaultRetries=2,this.defaultRetryDelay=1e3}}let n=new o},1216:(e,t,s)=>{s.d(t,{C:()=>a});var r=s(118);async function a(){let e=process.env.PINECONE_API_KEY,t=process.env.PINECONE_ASSISTANT_NAME;return(r.k.debug("Checking assistant prerequisites",{hasApiKey:!!e,assistantName:t}),e&&t)?{apiKey:e,assistantName:t}:(r.k.error("Missing required environment variables: PINECONE_API_KEY or PINECONE_ASSISTANT_NAME"),{apiKey:null,assistantName:null})}},118:(e,t,s)=>{s.d(t,{k:()=>a});class r{constructor(){this.metrics=new Map,this.config={level:"error",enableConsole:!1,enableMetrics:!0}}shouldLog(e){let t={error:0,warn:1,info:2,debug:3};return t[e]<=t[this.config.level]}error(e,t){this.shouldLog("error")&&console.error(`[ERROR] ${e}`,t||"")}warn(e,t){this.shouldLog("warn")&&this.config.enableConsole&&console.warn(`[WARN] ${e}`,t||"")}info(e,t){this.shouldLog("info")&&this.config.enableConsole&&console.info(`[INFO] ${e}`,t||"")}debug(e,t){this.shouldLog("debug")&&this.config.enableConsole&&console.log(`[DEBUG] ${e}`,t||"")}metric(e,t,s="ms"){this.config.enableMetrics&&(this.metrics.set(e,t),this.shouldLog("info")&&console.info(`[METRIC] ${e}: ${t}${s}`))}time(e){let t=Date.now();return()=>{let s=Date.now()-t;this.metric(e,s)}}getMetrics(){return Object.fromEntries(this.metrics)}clearMetrics(){this.metrics.clear()}}let a=new r}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[948,972],()=>s(9691));module.exports=r})();