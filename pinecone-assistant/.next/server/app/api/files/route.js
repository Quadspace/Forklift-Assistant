"use strict";(()=>{var e={};e.id=887,e.ids=[887],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},485:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>m,patchFetch:()=>E,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>f,staticGenerationAsyncStorage:()=>c});var r={};t.r(r),t.d(r,{GET:()=>p});var a=t(9303),i=t(8716),n=t(670),o=t(7070),u=t(1216);async function p(){let{apiKey:e,assistantName:s}=await (0,u.C)();if(!e||!s)return o.NextResponse.json({status:"error",message:"PINECONE_API_KEY and PINECONE_ASSISTANT_NAME are required.",files:[]},{status:400});try{let t=await fetch(`https://prod-1-data.ke.pinecone.io/assistant/files/${s}`,{method:"GET",headers:{"Api-Key":e}});if(!t.ok)throw Error(`HTTP error! status: ${t.status}`);let r=await t.json();if(!r.files||!Array.isArray(r.files))throw Error("Unexpected response format: files is not an array");let a=r.files.map(e=>({id:e.id,name:e.name,size:e.size,created_at:e.created_on,updated_at:e.updated_on,status:e.status,metadata:e.metadata}));return o.NextResponse.json({status:"success",message:`Files for assistant '${s}' retrieved successfully.`,files:a},{status:200})}catch(e){return console.error(`Error listing assistant files: ${e instanceof Error?e.message:String(e)}`),o.NextResponse.json({status:"error",message:`Failed to list assistant files: ${e instanceof Error?e.message:String(e)}`,files:[]},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/files/route",pathname:"/api/files",filename:"route",bundlePath:"app/api/files/route"},resolvedPagePath:"C:\\Users\\MichaelSanders\\Documents\\Forklift-Assistant\\sample-apps\\pinecone-assistant\\src\\app\\api\\files\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:f}=l,m="/api/files/route";function E(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:c})}},1216:(e,s,t)=>{t.d(s,{C:()=>r});async function r(){let e=process.env.PINECONE_API_KEY,s=process.env.PINECONE_ASSISTANT_NAME;return(console.log(`Checking prerequisites: API Key: ${e?"Set":"Not Set"}, Assistant Name: ${s}`),e&&s)?{apiKey:e,assistantName:s}:(console.error("Error: PINECONE_API_KEY or PINECONE_ASSISTANT_NAME is missing."),{apiKey:null,assistantName:null})}}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[948,972],()=>t(485));module.exports=r})();